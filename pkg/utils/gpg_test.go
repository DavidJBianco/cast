package utils

import (
	"io/ioutil"
	"os"
	"testing"

	"github.com/stretchr/testify/assert"
)

const (
	PublicPGPKey = `-----BEGIN PGP PUBLIC KEY BLOCK-----

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
=QXEr
-----END PGP PUBLIC KEY BLOCK-----`

	PrivatePGPKey = `-----BEGIN PGP PRIVATE KEY BLOCK-----

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
L1ooEzKumg==
=I25A
-----END PGP PRIVATE KEY BLOCK-----`
)

func Test_GPGSign(t *testing.T) {
	cwd, err := os.Getwd()
	assert.NoError(t, err)

	dir, err := ioutil.TempDir(os.TempDir(), "utils-gpg-")
	assert.NoError(t, err)
	defer func(path string) {
		_ = os.RemoveAll(path)
	}(dir)

	err = os.Chdir(dir)
	assert.NoError(t, err)

	bigBuff := make([]byte, 5000000)
	err = os.WriteFile("bigfile.test", bigBuff, 0666)
	assert.NoError(t, err)

	err = GPGSign(dir, "bigfile.test", "bigfile.test.asc", []byte(PrivatePGPKey), true)
	assert.NoError(t, err)

	_, err = FileExists("bigfile.text.asc")
	assert.NoError(t, err)

	err = GPGVerify(dir, "bigfile.test", "bigfile.test.asc", []byte(PublicPGPKey))
	assert.NoError(t, err)

	err = os.Chdir(cwd)
	assert.NoError(t, err)
}
